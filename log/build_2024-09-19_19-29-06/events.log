[0.000000] (-) TimerEvent: {}
[0.000479] (turtlebot3_fake_node) JobQueued: {'identifier': 'turtlebot3_fake_node', 'dependencies': OrderedDict()}
[0.000536] (turtlebot3_gazebo) JobQueued: {'identifier': 'turtlebot3_gazebo', 'dependencies': OrderedDict()}
[0.000618] (turtlebot3_simulations) JobQueued: {'identifier': 'turtlebot3_simulations', 'dependencies': OrderedDict([('turtlebot3_fake_node', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node'), ('turtlebot3_gazebo', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo')])}
[0.000651] (turtlebot3_fake_node) JobStarted: {'identifier': 'turtlebot3_fake_node'}
[0.004599] (turtlebot3_gazebo) JobStarted: {'identifier': 'turtlebot3_gazebo'}
[0.007429] (turtlebot3_fake_node) JobProgress: {'identifier': 'turtlebot3_fake_node', 'progress': 'cmake'}
[0.008243] (turtlebot3_fake_node) JobProgress: {'identifier': 'turtlebot3_fake_node', 'progress': 'build'}
[0.008442] (turtlebot3_fake_node) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node', '--', '-j16', '-l16'], 'cwd': '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'kivaan123'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('HOME', '/home/kivaan123'), ('OLDPWD', '/home/kivaan123'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('GAZEBO_MASTER_URI', 'http://localhost:11345'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1634'), ('SYSTEMD_EXEC_PID', '2029'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '55994'), ('COLCON_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'kivaan123'), ('JOURNAL_STREAM', '8:13104'), ('_', '/home/kivaan123/.local/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'kivaan123'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('OGRE_RESOURCE_PATH', '/usr/lib/x86_64-linux-gnu/OGRE-1.9.0'), ('PATH', '/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/opt/ros/humble/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/kivaan123-Cyborg-14-A13UDX:@/tmp/.ICE-unix/1995,unix/kivaan123-Cyborg-14-A13UDX:/tmp/.ICE-unix/1995'), ('INVOCATION_ID', 'aded446de0f14376b2506a3b4f33083b'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '30'), ('AMENT_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:0704b7bc-ee34-48e8-80dc-888fd0aa1295'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GAZEBO_MODEL_DATABASE_URI', 'http://models.gazebosim.org'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble')]), 'shell': False}
[0.010903] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'cmake'}
[0.011099] (turtlebot3_gazebo) JobProgress: {'identifier': 'turtlebot3_gazebo', 'progress': 'build'}
[0.011325] (turtlebot3_gazebo) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_gazebo', '--', '-j16', '-l16'], 'cwd': '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_gazebo', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'kivaan123'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('HOME', '/home/kivaan123'), ('OLDPWD', '/home/kivaan123'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('GAZEBO_MASTER_URI', 'http://localhost:11345'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1634'), ('SYSTEMD_EXEC_PID', '2029'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '55994'), ('COLCON_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'kivaan123'), ('JOURNAL_STREAM', '8:13104'), ('_', '/home/kivaan123/.local/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'kivaan123'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('OGRE_RESOURCE_PATH', '/usr/lib/x86_64-linux-gnu/OGRE-1.9.0'), ('PATH', '/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/opt/ros/humble/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/kivaan123-Cyborg-14-A13UDX:@/tmp/.ICE-unix/1995,unix/kivaan123-Cyborg-14-A13UDX:/tmp/.ICE-unix/1995'), ('INVOCATION_ID', 'aded446de0f14376b2506a3b4f33083b'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '30'), ('AMENT_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:0704b7bc-ee34-48e8-80dc-888fd0aa1295'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GAZEBO_MODEL_DATABASE_URI', 'http://models.gazebosim.org'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_gazebo'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble')]), 'shell': False}
[0.054966] (turtlebot3_gazebo) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target turtlebot3_drive\x1b[0m\n'}
[0.068424] (turtlebot3_fake_node) StdoutLine: {'line': b'[100%] Built target turtlebot3_fake_node\n'}
[0.086293] (turtlebot3_fake_node) CommandEnded: {'returncode': 0}
[0.087799] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 11%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_drive.dir/src/turtlebot3_drive.cpp.o\x1b[0m\n'}
[0.088884] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 22%] \x1b[32mBuilding CXX object CMakeFiles/turtlebot3_drive.dir/src/LidarSensor.cpp.o\x1b[0m\n'}
[0.096421] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 66%] Built target obstacle2\n'}
[0.096746] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 66%] Built target obstacles\n'}
[0.098436] (turtlebot3_gazebo) StdoutLine: {'line': b'[ 88%] Built target obstacle1\n'}
[0.099922] (-) TimerEvent: {}
[0.114214] (turtlebot3_fake_node) JobProgress: {'identifier': 'turtlebot3_fake_node', 'progress': 'install'}
[0.119709] (turtlebot3_fake_node) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node'], 'cwd': '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_AU:en'), ('USER', 'kivaan123'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins::/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('HOME', '/home/kivaan123'), ('OLDPWD', '/home/kivaan123'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('GAZEBO_MASTER_URI', 'http://localhost:11345'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1634'), ('SYSTEMD_EXEC_PID', '2029'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '55994'), ('COLCON_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'kivaan123'), ('JOURNAL_STREAM', '8:13104'), ('_', '/home/kivaan123/.local/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'kivaan123'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', '/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:/usr/share/gazebo-11/models:'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('OGRE_RESOURCE_PATH', '/usr/lib/x86_64-linux-gnu/OGRE-1.9.0'), ('PATH', '/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/opt/ros/humble/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/home/kivaan123/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/kivaan123-Cyborg-14-A13UDX:@/tmp/.ICE-unix/1995,unix/kivaan123-Cyborg-14-A13UDX:/tmp/.ICE-unix/1995'), ('INVOCATION_ID', 'aded446de0f14376b2506a3b4f33083b'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('IBUS_DISABLE_SNOOPER', '1'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('ROS_DOMAIN_ID', '30'), ('AMENT_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:0704b7bc-ee34-48e8-80dc-888fd0aa1295'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GAZEBO_RESOURCE_PATH', '/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:/usr/share/gazebo-11:'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GAZEBO_MODEL_DATABASE_URI', 'http://models.gazebosim.org'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/kivaan123/Turtlebot3-Wall-Follower/build/turtlebot3_fake_node'), ('TURTLEBOT3_MODEL', 'burger'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('GAZEBO_PLUGIN_PATH', '/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_simulations:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_gazebo:/home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node:/opt/ros/humble')]), 'shell': False}
[0.125958] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[0.126337] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Execute custom install script\n'}
[0.126515] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/lib/turtlebot3_fake_node/turtlebot3_fake_node\n'}
[0.126717] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/launch/rviz2.launch.py\n'}
[0.126789] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/launch/turtlebot3_fake_node.launch.py\n'}
[0.126923] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/param/burger.yaml\n'}
[0.127017] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/param/waffle.yaml\n'}
[0.127097] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/param/waffle_pi.yaml\n'}
[0.127157] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/include//turtlebot3_fake_node/turtlebot3_fake_node.hpp\n'}
[0.127255] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/ament_index/resource_index/package_run_dependencies/turtlebot3_fake_node\n'}
[0.127352] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/ament_index/resource_index/parent_prefix_path/turtlebot3_fake_node\n'}
[0.127438] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/environment/ament_prefix_path.sh\n'}
[0.127511] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/environment/ament_prefix_path.dsv\n'}
[0.127583] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/environment/path.sh\n'}
[0.127653] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/environment/path.dsv\n'}
[0.127721] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/local_setup.bash\n'}
[0.127785] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/local_setup.sh\n'}
[0.127850] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/local_setup.zsh\n'}
[0.127913] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/local_setup.dsv\n'}
[0.127967] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Symlinking: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/package.dsv\n'}
[0.134708] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/ament_index/resource_index/packages/turtlebot3_fake_node\n'}
[0.134788] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/cmake/ament_cmake_export_include_directories-extras.cmake\n'}
[0.134861] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/cmake/ament_cmake_export_dependencies-extras.cmake\n'}
[0.134917] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/cmake/turtlebot3_fake_nodeConfig.cmake\n'}
[0.134951] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/cmake/turtlebot3_fake_nodeConfig-version.cmake\n'}
[0.135009] (turtlebot3_fake_node) StdoutLine: {'line': b'-- Up-to-date symlink: /home/kivaan123/Turtlebot3-Wall-Follower/install/turtlebot3_fake_node/share/turtlebot3_fake_node/package.xml\n'}
[0.136315] (turtlebot3_fake_node) CommandEnded: {'returncode': 0}
[0.166034] (turtlebot3_fake_node) JobEnded: {'identifier': 'turtlebot3_fake_node', 'rc': 0}
[0.200040] (-) TimerEvent: {}
[0.300303] (-) TimerEvent: {}
[0.400525] (-) TimerEvent: {}
[0.500747] (-) TimerEvent: {}
[0.601006] (-) TimerEvent: {}
[0.701272] (-) TimerEvent: {}
[0.801534] (-) TimerEvent: {}
[0.901765] (-) TimerEvent: {}
[1.002037] (-) TimerEvent: {}
[1.102316] (-) TimerEvent: {}
[1.202546] (-) TimerEvent: {}
[1.302756] (-) TimerEvent: {}
[1.403016] (-) TimerEvent: {}
[1.475301] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:1\x1b[m\x1b[K:\n'}
[1.475467] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserScan\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.475525] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::\x1b[01;31m\x1b[KLaserScan\x1b[m\x1b[K::SharedPtr msg);\n'}
[1.475578] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.475625] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.475676] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::SharedPtr \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.475724] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.475770] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.475807] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback\x1b[34m\x1b[K(\x1b[m\x1b[Kconst sensor_msgs::LaserScan::SharedPtr\x1b[01;31m\x1b[K \x1b[m\x1b[K\x1b[32m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.475843] (turtlebot3_gazebo) StderrLine: {'line': b'      |                           \x1b[34m\x1b[K~\x1b[m\x1b[K                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\x1b[32m\x1b[K~~~\x1b[m\x1b[K\n'}
[1.475878] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K)\x1b[m\x1b[K\n'}
[1.475913] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[1.475954] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K msg);\n'}
[1.476004] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.476051] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.476142] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.476191] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::SharedPtr \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.476232] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.498488] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:18:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Knew types may not be defined in a return type\n'}
[1.498602] (turtlebot3_gazebo) StderrLine: {'line': b'   18 | \x1b[01;31m\x1b[Kclass\x1b[m\x1b[K LidarSensor\n'}
[1.498645] (turtlebot3_gazebo) StderrLine: {'line': b'      | \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[1.498697] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:18:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K(perhaps a semicolon is missing after the definition of \xe2\x80\x98\x1b[01m\x1b[KLidarSensor\x1b[m\x1b[K\xe2\x80\x99)\n'}
[1.498759] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:18:1:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kreturn type specification for constructor invalid\n'}
[1.502762] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KLidarSensor::LidarSensor(rclcpp::Node::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.502822] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:7:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kscan_data\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kscan_data_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[1.502856] (turtlebot3_gazebo) StderrLine: {'line': b'    7 |     for(int i = 0; i < NUM_LIDAR_ANGLES; i++){ \x1b[01;31m\x1b[Kscan_data\x1b[m\x1b[K[i] = 0.0; }\n'}
[1.502887] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.502916] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                \x1b[32m\x1b[Kscan_data_\x1b[m\x1b[K\n'}
[1.503065] (-) TimerEvent: {}
[1.507808] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:\x1b[m\x1b[K At global scope:\n'}
[1.507890] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:17:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno declaration matches \xe2\x80\x98\x1b[01m\x1b[Kvoid LidarSensor::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.507926] (turtlebot3_gazebo) StderrLine: {'line': b'   17 | void \x1b[01;31m\x1b[KLidarSensor\x1b[m\x1b[K::scan_callback(const sensor_msgs::msg::LaserScan::SharedPtr msg)\n'}
[1.507964] (turtlebot3_gazebo) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.508003] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:1\x1b[m\x1b[K:\n'}
[1.508042] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:14:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate is: \xe2\x80\x98\x1b[01m\x1b[Kvoid LidarSensor::scan_callback(...)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.508080] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void \x1b[01;36m\x1b[Kscan_callback\x1b[m\x1b[K(const sensor_msgs::LaserScan::SharedPtr msg);\n'}
[1.508116] (turtlebot3_gazebo) StderrLine: {'line': b'      |              \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.508148] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:18:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass LidarSensor\x1b[m\x1b[K\xe2\x80\x99 defined here\n'}
[1.508183] (turtlebot3_gazebo) StderrLine: {'line': b'   18 | class \x1b[01;36m\x1b[KLidarSensor\x1b[m\x1b[K\n'}
[1.508214] (turtlebot3_gazebo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.603199] (-) TimerEvent: {}
[1.689503] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/turtlebot3_drive.hpp:17\x1b[m\x1b[K,\n'}
[1.689650] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/turtlebot3_drive.cpp:1\x1b[m\x1b[K:\n'}
[1.689704] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KLaserScan\x1b[m\x1b[K\xe2\x80\x99 in namespace \xe2\x80\x98\x1b[01m\x1b[Ksensor_msgs\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.689758] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::\x1b[01;31m\x1b[KLaserScan\x1b[m\x1b[K::SharedPtr msg);\n'}
[1.689801] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.689840] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected unqualified-id before \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.689881] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::SharedPtr \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.689918] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.689955] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K)\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.689994] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback\x1b[34m\x1b[K(\x1b[m\x1b[Kconst sensor_msgs::LaserScan::SharedPtr\x1b[01;31m\x1b[K \x1b[m\x1b[K\x1b[32m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.690032] (turtlebot3_gazebo) StderrLine: {'line': b'      |                           \x1b[34m\x1b[K~\x1b[m\x1b[K                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\x1b[32m\x1b[K~~~\x1b[m\x1b[K\n'}
[1.690070] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K)\x1b[m\x1b[K\n'}
[1.690108] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 at end of member declaration\n'}
[1.690145] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::\x1b[01;31m\x1b[KSharedPtr\x1b[m\x1b[K msg);\n'}
[1.690181] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.690214] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                   \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.690864] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:27:68:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 does not name a type\n'}
[1.690914] (turtlebot3_gazebo) StderrLine: {'line': b'   27 |         void scan_callback(const sensor_msgs::LaserScan::SharedPtr \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K);\n'}
[1.690947] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                    \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[1.703333] (-) TimerEvent: {}
[1.715948] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:32:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 after class definition\n'}
[1.716022] (turtlebot3_gazebo) StderrLine: {'line': b'   32 | }\n'}
[1.716065] (turtlebot3_gazebo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.716100] (turtlebot3_gazebo) StderrLine: {'line': b'      |  \x1b[32m\x1b[K;\x1b[m\x1b[K\n'}
[1.752251] (turtlebot3_gazebo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:39\x1b[m\x1b[K,\n'}
[1.752368] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.752407] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.752460] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.752508] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.752558] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.752595] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.752627] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.752659] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.752690] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.752721] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/include/turtlebot3_gazebo/LidarSensor.hpp:4\x1b[m\x1b[K,\n'}
[1.752753] (turtlebot3_gazebo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:1\x1b[m\x1b[K:\n'}
[1.752785] (turtlebot3_gazebo) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct rclcpp::function_traits::function_traits<std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.752819] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:380:10:\x1b[m\x1b[K   recursively required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT> struct rclcpp::detail::SubscriptionCallbackTypeHelper<MessageT, CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value, void>::type> [with MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.752858] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:380:10:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>; MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.752897] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::LaserScan_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = sensor_msgs::msg::LaserScan_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.752952] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::LaserScan_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = sensor_msgs::msg::LaserScan_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.752992] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::LaserScan_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.753025] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = sensor_msgs::msg::LaserScan_<std::allocator<void> >; CallbackT = std::_Bind<void (LidarSensor::*(LidarSensor*, std::_Placeholder<1>))(...)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<sensor_msgs::msg::LaserScan_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<sensor_msgs::msg::LaserScan_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.753060] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/LidarSensor.cpp:9:72:\x1b[m\x1b[K   required from here\n'}
[1.753090] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:51:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[1.753120] (turtlebot3_gazebo) StderrLine: {'line': b'   51 |   using \x1b[01;31m\x1b[Karguments\x1b[m\x1b[K = typename tuple_tail<\n'}
[1.753151] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.753183] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:57:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[1.753212] (turtlebot3_gazebo) StderrLine: {'line': b'   57 |   using \x1b[01;31m\x1b[Kargument_type\x1b[m\x1b[K = typename std::tuple_element<N, arguments>::type;\n'}
[1.753242] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.753279] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/function_traits.hpp:59:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdecltype\x1b[m\x1b[K\xe2\x80\x99 cannot resolve address of overloaded function\n'}
[1.753309] (turtlebot3_gazebo) StderrLine: {'line': b'   59 |   using \x1b[01;31m\x1b[Kreturn_type\x1b[m\x1b[K = typename function_traits<decltype( &FunctionT::operator())>::return_type;\n'}
[1.753338] (turtlebot3_gazebo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.772023] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/turtlebot3_drive.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KTurtlebot3Drive::Turtlebot3Drive()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.772086] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/turtlebot3_drive.cpp:46:92:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected primary-expression before \xe2\x80\x98\x1b[01m\x1b[K/\x1b[m\x1b[K\xe2\x80\x99 token\n'}
[1.772133] (turtlebot3_gazebo) StderrLine: {'line': b'   46 |     "odom", qos, std::bind(&Turtlebot3Drive::odom_callback, this, std::placeholders::_1));*\x1b[01;31m\x1b[K/\x1b[m\x1b[K\n'}
[1.772170] (turtlebot3_gazebo) StderrLine: {'line': b'      |                                                                                            \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[1.782605] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/turtlebot3_drive.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid Turtlebot3Drive::update_callback()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.782661] (turtlebot3_gazebo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/kivaan123/Turtlebot3-Wall-Follower/turtlebot3_gazebo/src/turtlebot3_drive.cpp:148:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kmin_turn_distance\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable\x07-Wunused-variable\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[1.782715] (turtlebot3_gazebo) StderrLine: {'line': b'  148 |   double \x1b[01;35m\x1b[Kmin_turn_distance\x1b[m\x1b[K = 0.1;         // Minimum distance before making a turn\n'}
[1.782760] (turtlebot3_gazebo) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.803397] (-) TimerEvent: {}
[1.903554] (-) TimerEvent: {}
[2.003750] (-) TimerEvent: {}
[2.103974] (-) TimerEvent: {}
[2.204179] (-) TimerEvent: {}
[2.304386] (-) TimerEvent: {}
[2.404640] (-) TimerEvent: {}
[2.504901] (-) TimerEvent: {}
[2.605144] (-) TimerEvent: {}
[2.705342] (-) TimerEvent: {}
[2.805519] (-) TimerEvent: {}
[2.905718] (-) TimerEvent: {}
[2.906493] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/turtlebot3_drive.dir/build.make:90: CMakeFiles/turtlebot3_drive.dir/src/LidarSensor.cpp.o] Error 1\n'}
[2.906590] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** Waiting for unfinished jobs....\n'}
[3.005831] (-) TimerEvent: {}
[3.106058] (-) TimerEvent: {}
[3.206279] (-) TimerEvent: {}
[3.306455] (-) TimerEvent: {}
[3.406646] (-) TimerEvent: {}
[3.506892] (-) TimerEvent: {}
[3.607144] (-) TimerEvent: {}
[3.707375] (-) TimerEvent: {}
[3.807607] (-) TimerEvent: {}
[3.854810] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/turtlebot3_drive.dir/build.make:76: CMakeFiles/turtlebot3_drive.dir/src/turtlebot3_drive.cpp.o] Error 1\n'}
[3.855033] (turtlebot3_gazebo) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:143: CMakeFiles/turtlebot3_drive.dir/all] Error 2\n'}
[3.855235] (turtlebot3_gazebo) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.856951] (turtlebot3_gazebo) CommandEnded: {'returncode': 2}
[3.907806] (-) TimerEvent: {}
[3.946785] (turtlebot3_gazebo) JobEnded: {'identifier': 'turtlebot3_gazebo', 'rc': 2}
[3.958363] (turtlebot3_simulations) JobSkipped: {'identifier': 'turtlebot3_simulations'}
[3.958643] (-) EventReactorShutdown: {}
